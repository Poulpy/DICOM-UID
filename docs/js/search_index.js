var search_data = {"index":{"searchIndex":["dicomuid","leadingzeroerror","object","oddbyteerror","oversizeduiderror","add_missing_dot()","leading_zero?()","new()","new()","new()","odd_byte_rule()","random_component()","random_dicom_uid()","random_uids()"],"longSearchIndex":["dicomuid","leadingzeroerror","object","oddbyteerror","oversizeduiderror","object#add_missing_dot()","object#leading_zero?()","leadingzeroerror::new()","oddbyteerror::new()","oversizeduiderror::new()","object#odd_byte_rule()","dicomuid::random_component()","dicomuid::random_dicom_uid()","dicomuid::random_uids()"],"info":[["DicomUID","","DicomUID.html","","<p>DICOM UID Generator according to the DICOM documentation\ndicom.nema.org/dicom/2013/output/chtml/part05/chapter_9.html …\n"],["LeadingZeroError","","LeadingZeroError.html","","<p>EXCEPTIONS\n"],["Object","","Object.html","",""],["OddByteError","","OddByteError.html","",""],["OversizedUIDError","","OversizedUIDError.html","",""],["add_missing_dot","Object","Object.html#method-i-add_missing_dot","(comp)",""],["leading_zero?","Object","Object.html#method-i-leading_zero-3F","(org_root)",""],["new","LeadingZeroError","LeadingZeroError.html#method-c-new","(msg = \"Can't have a leading 0 in a component with multiple digits\")",""],["new","OddByteError","OddByteError.html#method-c-new","(msg = \"Can't have an odd last byte in a component\")",""],["new","OversizedUIDError","OversizedUIDError.html#method-c-new","(msg = \"UID musn't be more than 64 characters\")",""],["odd_byte_rule","Object","Object.html#method-i-odd_byte_rule","(comp)",""],["random_component","DicomUID","DicomUID.html#method-c-random_component","(length = 62, odd_byte_boundary = true)","<p>Generates random component with defined, maximum length The maximum length\nis 62. Why ? Because an UID …\n"],["random_dicom_uid","DicomUID","DicomUID.html#method-c-random_dicom_uid","(org_root, fixed_size, odd_byte_boundary = true)","<p>set default values, with org_root if needed the size of the UID is\nrandomized fixed_size is the size …\n"],["random_uids","DicomUID","DicomUID.html#method-c-random_uids","(org_root, fixed_size, array_size, odd_byte_boundary = true)","<p>Return an array of UIDs, from a common org root\n"]]}}